#!/usr/bin/env python

# here we will send the packet and to do so
# we can user on of two functions scapy.srp() or scapy.sr()
# the scapy.sr() is most common and scapy.srp() is used when we need
# to send a packet with custom ether part

import scapy.all as scapy
import optparse

# getArguments() responsible of getting the args from the terminal
def getArguments():
    parser = optparse.OptionParser()
    parser.add_option("-r", "--range", dest="range", help="enter the IP range to scan.")
    (options, arguments) = parser.parse_args()
    if not options.range:
        print("Please Enter the IP range to scan!")
    return options.range

# scan(ip) is the function that do all the networking stuff
def scan(ip):
    broadcast_mac = "ff:ff:ff:ff:ff:ff"
    arp_part = scapy.ARP(pdst=ip)
    ether_part = scapy.Ether(dst=broadcast_mac)
    combined_packet = ether_part/arp_part
    answered = scapy.srp(combined_packet, timeout=1, verbose=False)[0]
    clients_list = []
    for elements in answered:
        dict_element = {"IP": elements[1].psrc, "MAC": elements[1].hwsrc}
        clients_list.append(dict_element)
    return clients_list

# printAnswer(clients_list) is the funtion that prints the answer list of dictionaries
def printAnswer(clients_list):
    print("IP\t\t\tMAC\n-----------------------------------------")
    for client in clients_list:
        print(client["IP"] + "\t\t" + client["MAC"])


range = getArguments()
answered_list = scan(range)
printAnswer(answered_list)
